/// A xorshift generator with a period of 2^16 - 1, SHIFT_INDEX selects which
/// shift coeffcients to use of the 60 available
pub fn xorshift_u16<const SHIFT_INDEX: usize>(mut x: u16) -> u16 {
    x ^= x << XORSHIFT_U16_SHIFTS[SHIFT_INDEX].0;
    x ^= x >> XORSHIFT_U16_SHIFTS[SHIFT_INDEX].1;
    x ^= x << XORSHIFT_U16_SHIFTS[SHIFT_INDEX].2;
    x
}

/// List of all the full-period shifts for 16-bit xorshift
pub const XORSHIFT_U16_SHIFTS: [(u16, u16, u16); 60] = [
    (1, 11, 3),
    (1, 1, 14),
    (1, 1, 15),
    (1, 15, 6),
    (1, 15, 7),
    (1, 5, 2),
    (1, 7, 11),
    (1, 7, 4),
    (2, 5, 13),
    (2, 5, 15),
    (2, 5, 1),
    (2, 7, 13),
    (2, 7, 15),
    (3, 11, 11),
    (3, 11, 1),
    (3, 1, 12),
    (3, 1, 15),
    (3, 13, 9),
    (3, 5, 11),
    (4, 11, 11),
    (4, 3, 7),
    (4, 7, 1),
    (5, 11, 11),
    (5, 11, 6),
    (5, 7, 14),
    (5, 9, 8),
    (6, 11, 5),
    (6, 15, 1),
    (6, 7, 13),
    (7, 1, 11),
    (7, 15, 1),
    (7, 3, 4),
    (7, 9, 13),
    (7, 9, 8),
    (8, 9, 5),
    (8, 9, 7),
    (9, 13, 3),
    (9, 7, 13),
    (11, 11, 3),
    (11, 11, 4),
    (11, 11, 5),
    (11, 1, 7),
    (11, 3, 13),
    (11, 5, 3),
    (11, 7, 1),
    (12, 1, 3),
    (12, 3, 13),
    (13, 3, 11),
    (13, 3, 12),
    (13, 5, 2),
    (13, 7, 2),
    (13, 7, 6),
    (13, 7, 9),
    (13, 9, 7),
    (14, 1, 1),
    (14, 7, 5),
    (15, 1, 1),
    (15, 1, 3),
    (15, 5, 2),
    (15, 7, 2),
];

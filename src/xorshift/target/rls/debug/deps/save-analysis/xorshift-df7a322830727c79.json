{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zom/Github/vec_rand/src/xorshift","program":"/home/zom/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":[],"output":"/home/zom/Github/vec_rand/src/xorshift/target/rls/debug/deps/libxorshift-df7a322830727c79.rmeta"},"prelude":{"crate_id":{"name":"xorshift","disambiguator":[16740859929027319858,6705532963828345768]},"crate_root":"src","external_crates":[{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9818625243460013247,16487093225271079228]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/xorshift_avx_intrinsics.rs","num":2,"id":{"name":"core","disambiguator":[11947651413578653303,9125350549974577926]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9117317158706016546,5535949425969621445]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2168407567314601696,8376855152256258116]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11116212667913583268,3444186470067846703]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3872861710276174251,15876487313220250568]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13860825176977992560,1698444050286169234]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2830578740292160095,1910305124997353956]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[16707393143613576238,8181691501765492707]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[867930875331668124,16782986931134468108]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16182755263607870165,10137121486642220156]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[309537303905876721,4659956737681351542]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3246319295624388151,474439341419761886]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8478575438525789511,8346902702018065219]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":15,"id":{"name":"test","disambiguator":[17306770490666800291,8609796271107583510]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":16,"id":{"name":"getopts","disambiguator":[248436444182099663,10403534840223261805]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":17,"id":{"name":"rustc_std_workspace_std","disambiguator":[8550001088158662867,837357608057088617]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":18,"id":{"name":"unicode_width","disambiguator":[15191806500624766536,15030416159471427701]}},{"file_name":"/home/zom/Github/vec_rand/src/xorshift/src/lib.rs","num":19,"id":{"name":"term","disambiguator":[4553113997757350395,6444763010311043822]}}],"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":614,"line_start":1,"line_end":24,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4},"span":{"file_name":"src/lib.rs","byte_start":62,"byte_end":76,"line_start":4,"line_end":4,"column_start":25,"column_end":39},"alias_span":null,"name":"xorshift","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":34768},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1087,"byte_end":1094,"line_start":5,"line_end":5,"column_start":5,"column_end":12},"alias_span":null,"name":"__m256i","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":2,"index":10395},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1111,"byte_end":1128,"line_start":7,"line_end":7,"column_start":5,"column_end":22},"alias_span":null,"name":"_mm256_slli_epi64","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":2,"index":10419},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1144,"byte_end":1161,"line_start":9,"line_end":9,"column_start":5,"column_end":22},"alias_span":null,"name":"_mm256_srli_epi64","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":2,"index":10440},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1177,"byte_end":1193,"line_start":11,"line_end":11,"column_start":5,"column_end":21},"alias_span":null,"name":"_mm256_xor_si256","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":2,"index":10005},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1217,"byte_end":1235,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"alias_span":null,"name":"_mm256_loadu_si256","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":2,"index":10006},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1259,"byte_end":1278,"line_start":15,"line_end":15,"column_start":5,"column_end":24},"alias_span":null,"name":"_mm256_storeu_si256","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"src/lib.rs","byte_start":215,"byte_end":238,"line_start":9,"line_end":9,"column_start":34,"column_end":57},"alias_span":null,"name":"xorshift_avx_intrinsics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"src/lib.rs","byte_start":343,"byte_end":355,"line_start":14,"line_end":14,"column_start":23,"column_end":35},"alias_span":null,"name":"xorshift_avx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"src/lib.rs","byte_start":468,"byte_end":484,"line_start":19,"line_end":19,"column_start":27,"column_end":43},"alias_span":null,"name":"xorshift_avx_ss4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"src/lib.rs","byte_start":597,"byte_end":613,"line_start":24,"line_end":24,"column_start":27,"column_end":43},"alias_span":null,"name":"xorshift_avx_ss8","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":614,"line_start":1,"line_end":24,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"feature(asm)","span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":16,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"src/xorshift_plain.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xorshift_plain","qualname":"::xorshift_plain","value":"src/xorshift_plain.rs","parent":null,"children":[{"krate":0,"index":4}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2147483652},"span":{"file_name":"src/xorshift_plain.rs","byte_start":833,"byte_end":837,"line_start":11,"line_end":11,"column_start":23,"column_end":27},"name":"seed","qualname":"::xorshift_plain::xorshift_plain::seed","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"src/xorshift_plain.rs","byte_start":818,"byte_end":832,"line_start":11,"line_end":11,"column_start":8,"column_end":22},"name":"xorshift_plain","qualname":"::xorshift_plain::xorshift_plain","value":"pub fn xorshift_plain(u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Generate a random u64 using the by-the-book implementation\n \n Example:\n \n ```\n let value = xorshift(0xBAD5EEDdeadbeef);\n println!(\"{:?}\", value);\n ```\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"src/xorshift_plain.rs","byte_start":617,"byte_end":634,"line_start":2,"line_end":2,"column_start":1,"column_end":18}},{"value":"/ Generate a random u64 using the by-the-book implementation","span":{"file_name":"src/xorshift_plain.rs","byte_start":635,"byte_end":697,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ ","span":{"file_name":"src/xorshift_plain.rs","byte_start":698,"byte_end":702,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"src/xorshift_plain.rs","byte_start":703,"byte_end":715,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"src/xorshift_plain.rs","byte_start":716,"byte_end":720,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"src/xorshift_plain.rs","byte_start":721,"byte_end":728,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ let value = xorshift(0xBAD5EEDdeadbeef);","span":{"file_name":"src/xorshift_plain.rs","byte_start":729,"byte_end":773,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ println!(\"{:?}\", value);","span":{"file_name":"src/xorshift_plain.rs","byte_start":774,"byte_end":802,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"src/xorshift_plain.rs","byte_start":803,"byte_end":810,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Local","id":{"krate":0,"index":1073741828},"span":{"file_name":"src/xorshift_plain.rs","byte_start":865,"byte_end":866,"line_start":12,"line_end":12,"column_start":13,"column_end":14},"name":"s","qualname":"s$HirId { owner: DefId(0:4 ~ xorshift[e853]::xorshift_plain[0]::xorshift_plain[0]), local_id: 2 }","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xorshift_avx_intrinsics","qualname":"::xorshift_avx_intrinsics","value":"src/xorshift_avx_intrinsics.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/lib.rs","byte_start":91,"byte_end":121,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Local","id":{"krate":0,"index":2147483662},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1962,"byte_end":1966,"line_start":38,"line_end":38,"column_start":32,"column_end":36},"name":"seed","qualname":"::xorshift_avx_intrinsics::xorshift_avx_intrinsics::seed","value":"&mut [u64; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1938,"byte_end":1961,"line_start":38,"line_end":38,"column_start":8,"column_end":31},"name":"xorshift_avx_intrinsics","qualname":"::xorshift_avx_intrinsics::xorshift_avx_intrinsics","value":"pub fn xorshift_avx_intrinsics(&mut [u64; ]) -> [u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Generate 4 random u64 by running 4 parallel xorshifts using avx.\n This version uses rust's intrinsics instead of directly asm, \n and we observe that's several time slower.\n [This might be the reason why](https://software.intel.com/content/www/us/en/develop/articles/avoiding-avx-sse-transition-penalties.html)\n \n Example:\n \n ```\n  let mut seed: [u64; 4] = [\n      0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef,\n  ];\n let values = xorshift_avx_intrinsics(& mut seed);\n println!(\"{:?}\", values);\n ```\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1284,"byte_end":1314,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"inline(always)","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1315,"byte_end":1332,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ Generate 4 random u64 by running 4 parallel xorshifts using avx.","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1333,"byte_end":1401,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ This version uses rust's intrinsics instead of directly asm, ","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1402,"byte_end":1467,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ and we observe that's several time slower.","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1468,"byte_end":1514,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ [This might be the reason why](https://software.intel.com/content/www/us/en/develop/articles/avoiding-avx-sse-transition-penalties.html)","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1515,"byte_end":1655,"line_start":24,"line_end":24,"column_start":1,"column_end":141}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1656,"byte_end":1660,"line_start":25,"line_end":25,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1661,"byte_end":1673,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1674,"byte_end":1678,"line_start":27,"line_end":27,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1679,"byte_end":1686,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/  let mut seed: [u64; 4] = [","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1687,"byte_end":1718,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1719,"byte_end":1746,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1747,"byte_end":1774,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1775,"byte_end":1802,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1803,"byte_end":1830,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/  ];","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1831,"byte_end":1838,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ let values = xorshift_avx_intrinsics(& mut seed);","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1839,"byte_end":1892,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/ println!(\"{:?}\", values);","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1893,"byte_end":1922,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":1923,"byte_end":1930,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Local","id":{"krate":0,"index":1073741838},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2010,"byte_end":2016,"line_start":39,"line_end":39,"column_start":13,"column_end":19},"name":"result","qualname":"result$HirId { owner: DefId(0:14 ~ xorshift[e853]::xorshift_avx_intrinsics[0]::xorshift_avx_intrinsics[0]), local_id: 2 }","value":"[u64; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":3221225486},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2065,"byte_end":2069,"line_start":41,"line_end":41,"column_start":17,"column_end":21},"name":"temp","qualname":"temp$HirId { owner: DefId(0:14 ~ xorshift[e853]::xorshift_avx_intrinsics[0]::xorshift_avx_intrinsics[0]), local_id: 3 }","value":"std::arch::x86_64::__m256i","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":536870926},"span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2096,"byte_end":2100,"line_start":42,"line_end":42,"column_start":17,"column_end":21},"name":"seed","qualname":"seed$HirId { owner: DefId(0:14 ~ xorshift[e853]::xorshift_avx_intrinsics[0]::xorshift_avx_intrinsics[0]), local_id: 4 }","value":"std::arch::x86_64::__m256i","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":"src/xorshift_avx.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xorshift_avx","qualname":"::xorshift_avx","value":"src/xorshift_avx.rs","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/lib.rs","byte_start":241,"byte_end":271,"line_start":11,"line_end":11,"column_start":1,"column_end":31}}]},{"kind":"Local","id":{"krate":0,"index":2147483669},"span":{"file_name":"src/xorshift_avx.rs","byte_start":2932,"byte_end":2936,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"name":"seed","qualname":"::xorshift_avx::xorshift_avx::seed","value":"&mut [u64; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"src/xorshift_avx.rs","byte_start":2919,"byte_end":2931,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"xorshift_avx","qualname":"::xorshift_avx::xorshift_avx","value":"pub fn xorshift_avx(&mut [u64; ]) -> [u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Generate 4 random u64 by running 4 parallel xorshifts using avx.\n \n Example:\n \n ```\n  let mut seed: [u64; 4] = [\n      0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef,\n  ];\n let values = xorshift_avx(& mut seed);\n println!(\"{:?}\", values);\n ```\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/xorshift_avx.rs","byte_start":2530,"byte_end":2560,"line_start":3,"line_end":3,"column_start":1,"column_end":31}},{"value":"inline(always)","span":{"file_name":"src/xorshift_avx.rs","byte_start":2561,"byte_end":2578,"line_start":4,"line_end":4,"column_start":1,"column_end":18}},{"value":"/ Generate 4 random u64 by running 4 parallel xorshifts using avx.","span":{"file_name":"src/xorshift_avx.rs","byte_start":2579,"byte_end":2647,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ ","span":{"file_name":"src/xorshift_avx.rs","byte_start":2648,"byte_end":2652,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"src/xorshift_avx.rs","byte_start":2653,"byte_end":2665,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"src/xorshift_avx.rs","byte_start":2666,"byte_end":2670,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx.rs","byte_start":2671,"byte_end":2678,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/  let mut seed: [u64; 4] = [","span":{"file_name":"src/xorshift_avx.rs","byte_start":2679,"byte_end":2710,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx.rs","byte_start":2711,"byte_end":2738,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx.rs","byte_start":2739,"byte_end":2766,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx.rs","byte_start":2767,"byte_end":2794,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/      0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx.rs","byte_start":2795,"byte_end":2822,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/  ];","span":{"file_name":"src/xorshift_avx.rs","byte_start":2823,"byte_end":2830,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ let values = xorshift_avx(& mut seed);","span":{"file_name":"src/xorshift_avx.rs","byte_start":2831,"byte_end":2873,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ println!(\"{:?}\", values);","span":{"file_name":"src/xorshift_avx.rs","byte_start":2874,"byte_end":2903,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx.rs","byte_start":2904,"byte_end":2911,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Local","id":{"krate":0,"index":1073741845},"span":{"file_name":"src/xorshift_avx.rs","byte_start":2980,"byte_end":2986,"line_start":20,"line_end":20,"column_start":13,"column_end":19},"name":"result","qualname":"result$HirId { owner: DefId(0:21 ~ xorshift[e853]::xorshift_avx[0]::xorshift_avx[0]), local_id: 2 }","value":"[u64; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xorshift_avx_ss4","qualname":"::xorshift_avx_ss4","value":"src/xorshift_avx_ss4.rs","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/lib.rs","byte_start":358,"byte_end":388,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Local","id":{"krate":0,"index":2147483676},"span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4653,"byte_end":4657,"line_start":24,"line_end":24,"column_start":25,"column_end":29},"name":"seed","qualname":"::xorshift_avx_ss4::xorshift_avx_ss4::seed","value":"&[u64; 16]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4636,"byte_end":4652,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"xorshift_avx_ss4","qualname":"::xorshift_avx_ss4::xorshift_avx_ss4","value":"pub fn xorshift_avx_ss4(&[u64; ]) -> [u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Generate 16 random u64 by running 16 parallel xorshifts using avx.\n This method exploits both the SIMD instructions and the Out of Order Execution.\n \n This is the method with the best throughtput because with saturate the Instruction\n Decoder which can only fetch 16 bytes per clock cycle and most of avx instruction\n are 4 bytes wide.\n \n Example:\n \n ```\n  let mut seed: [u64; 16] = [\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n  ];\n let values = xorshift_avx_ss4(& mut seed);\n println!(\"{:?}\", values);\n ```\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":3728,"byte_end":3758,"line_start":3,"line_end":3,"column_start":1,"column_end":31}},{"value":"inline(always)","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":3759,"byte_end":3776,"line_start":4,"line_end":4,"column_start":1,"column_end":18}},{"value":"/ Generate 16 random u64 by running 16 parallel xorshifts using avx.","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":3777,"byte_end":3847,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ This method exploits both the SIMD instructions and the Out of Order Execution.","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":3848,"byte_end":3931,"line_start":6,"line_end":6,"column_start":1,"column_end":84}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":3932,"byte_end":3936,"line_start":7,"line_end":7,"column_start":1,"column_end":5}},{"value":"/ This is the method with the best throughtput because with saturate the Instruction","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":3937,"byte_end":4023,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ Decoder which can only fetch 16 bytes per clock cycle and most of avx instruction","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4024,"byte_end":4109,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"/ are 4 bytes wide.","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4110,"byte_end":4131,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4132,"byte_end":4136,"line_start":11,"line_end":11,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4137,"byte_end":4149,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4150,"byte_end":4154,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4155,"byte_end":4162,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/  let mut seed: [u64; 16] = [","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4163,"byte_end":4195,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4196,"byte_end":4280,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4281,"byte_end":4365,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4366,"byte_end":4450,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4451,"byte_end":4535,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/  ];","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4536,"byte_end":4543,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ let values = xorshift_avx_ss4(& mut seed);","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4544,"byte_end":4590,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ println!(\"{:?}\", values);","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4591,"byte_end":4620,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4621,"byte_end":4628,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Local","id":{"krate":0,"index":1073741852},"span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":4697,"byte_end":4703,"line_start":25,"line_end":25,"column_start":13,"column_end":19},"name":"result","qualname":"result$HirId { owner: DefId(0:28 ~ xorshift[e853]::xorshift_avx_ss4[0]::xorshift_avx_ss4[0]), local_id: 2 }","value":"[u64; 16]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xorshift_avx_ss8","qualname":"::xorshift_avx_ss8","value":"src/xorshift_avx_ss8.rs","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/lib.rs","byte_start":487,"byte_end":517,"line_start":21,"line_end":21,"column_start":1,"column_end":31}}]},{"kind":"Local","id":{"krate":0,"index":2147483683},"span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7758,"byte_end":7762,"line_start":27,"line_end":27,"column_start":25,"column_end":29},"name":"seed","qualname":"::xorshift_avx_ss8::xorshift_avx_ss8::seed","value":"&mut [u64; 32]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7741,"byte_end":7757,"line_start":27,"line_end":27,"column_start":8,"column_end":24},"name":"xorshift_avx_ss8","qualname":"::xorshift_avx_ss8::xorshift_avx_ss8","value":"pub fn xorshift_avx_ss8(&mut [u64; ]) -> [u64; ]","parent":null,"children":[],"decl_id":null,"docs":" Generate 32 random u64 by running 32 parallel xorshifts using avx.\n This method exploits both the SIMD instructions and the Out of Order Execution.\n \n This is the method has a lower throughtput than the `xorshift_avx_ss4` because the\n Decoder which can only fetch 16 bytes per clock cycle and most of avx instruction\n are 4 bytes wide. \n \n Example:\n \n ```\n  let mut seed: [u64; 32] = [\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,\n  ];\n let values = xorshift_avx_ss8(& mut seed);\n println!(\"{:?}\", values);\n ```\n","sig":null,"attributes":[{"value":"cfg(target_arch = \"x86_64\")","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6492,"byte_end":6522,"line_start":2,"line_end":2,"column_start":1,"column_end":31}},{"value":"inline(always)","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6523,"byte_end":6540,"line_start":3,"line_end":3,"column_start":1,"column_end":18}},{"value":"/ Generate 32 random u64 by running 32 parallel xorshifts using avx.","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6541,"byte_end":6611,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ This method exploits both the SIMD instructions and the Out of Order Execution.","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6612,"byte_end":6695,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6696,"byte_end":6700,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"/ This is the method has a lower throughtput than the `xorshift_avx_ss4` because the","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6701,"byte_end":6787,"line_start":7,"line_end":7,"column_start":1,"column_end":87}},{"value":"/ Decoder which can only fetch 16 bytes per clock cycle and most of avx instruction","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6788,"byte_end":6873,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/ are 4 bytes wide. ","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6874,"byte_end":6896,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6897,"byte_end":6901,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6902,"byte_end":6914,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6915,"byte_end":6919,"line_start":12,"line_end":12,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6920,"byte_end":6927,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/  let mut seed: [u64; 32] = [","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6928,"byte_end":6960,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":6961,"byte_end":7045,"line_start":15,"line_end":15,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7046,"byte_end":7130,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7131,"byte_end":7215,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7216,"byte_end":7300,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7301,"byte_end":7385,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7386,"byte_end":7470,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7471,"byte_end":7555,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/      0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef, 0xBAD5EEDdeadbeef,","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7556,"byte_end":7640,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/  ];","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7641,"byte_end":7648,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ let values = xorshift_avx_ss8(& mut seed);","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7649,"byte_end":7695,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ println!(\"{:?}\", values);","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7696,"byte_end":7725,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7726,"byte_end":7733,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Local","id":{"krate":0,"index":1073741859},"span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":7808,"byte_end":7814,"line_start":28,"line_end":28,"column_start":13,"column_end":19},"name":"result","qualname":"result$HirId { owner: DefId(0:35 ~ xorshift[e853]::xorshift_avx_ss8[0]::xorshift_avx_ss8[0]), local_id: 2 }","value":"[u64; 32]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":22,"byte_end":36,"line_start":3,"line_end":3,"column_start":5,"column_end":19},"ref_id":{"krate":0,"index":3}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":869,"byte_end":873,"line_start":12,"line_end":12,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":2147483652}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":884,"byte_end":885,"line_start":13,"line_end":13,"column_start":10,"column_end":11},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":879,"byte_end":880,"line_start":13,"line_end":13,"column_start":5,"column_end":6},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":902,"byte_end":903,"line_start":14,"line_end":14,"column_start":10,"column_end":11},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":897,"byte_end":898,"line_start":14,"line_end":14,"column_start":5,"column_end":6},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":919,"byte_end":920,"line_start":15,"line_end":15,"column_start":10,"column_end":11},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":914,"byte_end":915,"line_start":15,"line_end":15,"column_start":5,"column_end":6},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Variable","span":{"file_name":"src/xorshift_plain.rs","byte_start":932,"byte_end":933,"line_start":16,"line_end":16,"column_start":5,"column_end":6},"ref_id":{"krate":0,"index":1073741828}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":46,"byte_end":60,"line_start":4,"line_end":4,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":126,"byte_end":149,"line_start":7,"line_end":7,"column_start":5,"column_end":28},"ref_id":{"krate":0,"index":6}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":972,"byte_end":976,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"ref_id":{"krate":2,"index":34768}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":978,"byte_end":982,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"ref_id":{"krate":2,"index":34768}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":984,"byte_end":990,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"ref_id":{"krate":2,"index":34768}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":972,"byte_end":976,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"ref_id":{"krate":2,"index":10395}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":978,"byte_end":982,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"ref_id":{"krate":2,"index":10395}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":984,"byte_end":990,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"ref_id":{"krate":2,"index":10395}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":972,"byte_end":976,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"ref_id":{"krate":2,"index":10419}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":978,"byte_end":982,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"ref_id":{"krate":2,"index":10419}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":984,"byte_end":990,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"ref_id":{"krate":2,"index":10419}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":972,"byte_end":976,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"ref_id":{"krate":2,"index":10440}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":978,"byte_end":982,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"ref_id":{"krate":2,"index":10440}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":984,"byte_end":990,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"ref_id":{"krate":2,"index":10440}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":972,"byte_end":976,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"ref_id":{"krate":2,"index":10005}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":978,"byte_end":982,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"ref_id":{"krate":2,"index":10005}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":984,"byte_end":990,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"ref_id":{"krate":2,"index":10005}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":972,"byte_end":976,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"ref_id":{"krate":2,"index":10006}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":978,"byte_end":982,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"ref_id":{"krate":2,"index":10006}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":984,"byte_end":990,"line_start":3,"line_end":3,"column_start":17,"column_end":23},"ref_id":{"krate":2,"index":10006}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2071,"byte_end":2078,"line_start":41,"line_end":41,"column_start":23,"column_end":30},"ref_id":{"krate":2,"index":34768}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2102,"byte_end":2109,"line_start":42,"line_end":42,"column_start":23,"column_end":30},"ref_id":{"krate":2,"index":34768}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2112,"byte_end":2130,"line_start":42,"line_end":42,"column_start":33,"column_end":51},"ref_id":{"krate":2,"index":10005}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2136,"byte_end":2146,"line_start":42,"line_end":42,"column_start":57,"column_end":67},"ref_id":{"krate":2,"index":6704}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2131,"byte_end":2135,"line_start":42,"line_end":42,"column_start":52,"column_end":56},"ref_id":{"krate":0,"index":2147483662}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2157,"byte_end":2164,"line_start":42,"line_end":42,"column_start":78,"column_end":85},"ref_id":{"krate":2,"index":34768}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2182,"byte_end":2199,"line_start":43,"line_end":43,"column_start":16,"column_end":33},"ref_id":{"krate":2,"index":10395}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2200,"byte_end":2204,"line_start":43,"line_end":43,"column_start":34,"column_end":38},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2175,"byte_end":2179,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3221225486}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2226,"byte_end":2242,"line_start":44,"line_end":44,"column_start":16,"column_end":32},"ref_id":{"krate":2,"index":10440}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2243,"byte_end":2247,"line_start":44,"line_end":44,"column_start":33,"column_end":37},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2249,"byte_end":2253,"line_start":44,"line_end":44,"column_start":39,"column_end":43},"ref_id":{"krate":0,"index":3221225486}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2219,"byte_end":2223,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":536870926}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2271,"byte_end":2288,"line_start":45,"line_end":45,"column_start":16,"column_end":33},"ref_id":{"krate":2,"index":10419}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2289,"byte_end":2293,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2264,"byte_end":2268,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3221225486}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2314,"byte_end":2330,"line_start":46,"line_end":46,"column_start":16,"column_end":32},"ref_id":{"krate":2,"index":10440}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2331,"byte_end":2335,"line_start":46,"line_end":46,"column_start":33,"column_end":37},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2337,"byte_end":2341,"line_start":46,"line_end":46,"column_start":39,"column_end":43},"ref_id":{"krate":0,"index":3221225486}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2307,"byte_end":2311,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":536870926}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2359,"byte_end":2376,"line_start":47,"line_end":47,"column_start":16,"column_end":33},"ref_id":{"krate":2,"index":10395}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2377,"byte_end":2381,"line_start":47,"line_end":47,"column_start":34,"column_end":38},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2352,"byte_end":2356,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3221225486}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2403,"byte_end":2419,"line_start":48,"line_end":48,"column_start":16,"column_end":32},"ref_id":{"krate":2,"index":10440}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2420,"byte_end":2424,"line_start":48,"line_end":48,"column_start":33,"column_end":37},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2426,"byte_end":2430,"line_start":48,"line_end":48,"column_start":39,"column_end":43},"ref_id":{"krate":0,"index":3221225486}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2396,"byte_end":2400,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":536870926}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2441,"byte_end":2460,"line_start":49,"line_end":49,"column_start":9,"column_end":28},"ref_id":{"krate":2,"index":10006}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2468,"byte_end":2478,"line_start":49,"line_end":49,"column_start":36,"column_end":46},"ref_id":{"krate":2,"index":6704}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2461,"byte_end":2467,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"ref_id":{"krate":0,"index":1073741838}},{"kind":"Type","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2489,"byte_end":2496,"line_start":49,"line_end":49,"column_start":57,"column_end":64},"ref_id":{"krate":2,"index":34768}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2498,"byte_end":2502,"line_start":49,"line_end":49,"column_start":66,"column_end":70},"ref_id":{"krate":0,"index":536870926}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_intrinsics.rs","byte_start":2513,"byte_end":2519,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1073741838}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":190,"byte_end":213,"line_start":9,"line_end":9,"column_start":9,"column_end":32},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":276,"byte_end":288,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"ref_id":{"krate":0,"index":20}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx.rs","byte_start":3638,"byte_end":3642,"line_start":42,"line_end":42,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":2147483669}},{"kind":"Function","span":{"file_name":"src/xorshift_avx.rs","byte_start":3677,"byte_end":3687,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"ref_id":{"krate":2,"index":6704}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx.rs","byte_start":3670,"byte_end":3676,"line_start":43,"line_end":43,"column_start":22,"column_end":28},"ref_id":{"krate":0,"index":1073741845}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx.rs","byte_start":3717,"byte_end":3723,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"ref_id":{"krate":0,"index":1073741845}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":329,"byte_end":341,"line_start":14,"line_end":14,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":20}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":393,"byte_end":409,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"ref_id":{"krate":0,"index":27}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":6402,"byte_end":6406,"line_start":70,"line_end":70,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":2147483676}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":6441,"byte_end":6451,"line_start":71,"line_end":71,"column_start":29,"column_end":39},"ref_id":{"krate":2,"index":6704}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":6434,"byte_end":6440,"line_start":71,"line_end":71,"column_start":22,"column_end":28},"ref_id":{"krate":0,"index":1073741852}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_ss4.rs","byte_start":6481,"byte_end":6487,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"ref_id":{"krate":0,"index":1073741852}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":450,"byte_end":466,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":27}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":522,"byte_end":538,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"ref_id":{"krate":0,"index":34}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":11341,"byte_end":11345,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":2147483683}},{"kind":"Function","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":11380,"byte_end":11390,"line_start":115,"line_end":115,"column_start":29,"column_end":39},"ref_id":{"krate":2,"index":6704}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":11373,"byte_end":11379,"line_start":115,"line_end":115,"column_start":22,"column_end":28},"ref_id":{"krate":0,"index":1073741859}},{"kind":"Variable","span":{"file_name":"src/xorshift_avx_ss8.rs","byte_start":11420,"byte_end":11426,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"ref_id":{"krate":0,"index":1073741859}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":579,"byte_end":595,"line_start":24,"line_end":24,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":34}}],"macro_refs":[],"relations":[]}